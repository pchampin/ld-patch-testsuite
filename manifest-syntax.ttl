@prefix : <manifest.ttl#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<> a mf:Manifest ;
    rdfs:comment "Syntax tests for LD Patch" ;
    mf:entries ( <#a_empty_graph.v> <#a_no_period.v> <#a_var_as_object.v> <#a_var_as_predicate.v> <#a_var_as_subject.v> <#add_empty_graph> <#add_no_period> <#add_var_as_object> <#add_var_as_predicate> <#add_var_as_subject> <#addnew_empty_graph.v> <#addnew_no_period.v> <#addnew_var_as_object.v> <#addnew_var_as_predicate.v> <#addnew_var_as_subject.v> <#an_empty_graph.v> <#an_no_period.v> <#an_var_as_object.v> <#an_var_as_predicate.v> <#an_var_as_subject.v> <#bind_no_path> <#bind_no_period> <#bind_no_var> <#bind_var_unicode> <#c_bnode.v> <#c_iri.v> <#c_no_period.v> <#c_simple.v> <#cut_bnode> <#cut_iri> <#cut_no_period> <#cut_simple> <#d_empty_graph.v> <#d_no_period.v> <#d_var_as_object.v> <#d_var_as_predicate.v> <#d_var_as_subject.v> <#de_empty_graph.v> <#de_no_period.v> <#de_var_as_object.v> <#de_var_as_predicate.v> <#de_var_as_subject.v> <#delete_empty_graph.v> <#delete_no_period.v> <#delete_var_as_object.v> <#delete_var_as_predicate.v> <#delete_var_as_subject.v> <#deleteexisting_empty_graph.v> <#deleteexisting_no_period.v> <#deleteexisting_var_as_object.v> <#deleteexisting_var_as_predicate.v> <#deleteexisting_var_as_subject.v> <#empty_patch> <#empty_patch_whitespace> <#path_mixed> <#ul_bnode.v> <#ul_iri.v> <#ul_literal.v> <#ul_no_period.v> <#ul_no_predicate.v> <#ul_no_slice.v> <#ul_no_value.v> <#ul_single_index.v> <#ul_slice_wrong_order.v> <#ul_var.v> <#unbound_variable> <#undeclared_prefix> <#updatelist_bnode> <#updatelist_iri> <#updatelist_literal> <#updatelist_no_period> <#updatelist_no_predicate> <#updatelist_no_slice> <#updatelist_no_value> <#updatelist_single_index> <#updatelist_slice_wrong_order> <#updatelist_var> ) .

<#a_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "a empty graph.v" ;
    mf:action <s_bad_a_empty_graph.v.ldpatch> ;
    mf:name "a_empty_graph.v" .

<#a_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "a no period.v" ;
    mf:action <s_bad_a_no_period.v.ldpatch> ;
    mf:name "a_no_period.v" .

<#a_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "a var as object.v" ;
    mf:action <s_a_var_as_object.v.ldpatch> ;
    mf:name "a_var_as_object.v" .

<#a_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "a var as predicate.v" ;
    mf:action <s_bad_a_var_as_predicate.v.ldpatch> ;
    mf:name "a_var_as_predicate.v" .

<#a_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "a var as subject.v" ;
    mf:action <s_a_var_as_subject.v.ldpatch> ;
    mf:name "a_var_as_subject.v" .

<#add_empty_graph> a :NegativeSyntaxTest ;
    rdfs:comment "add empty graph" ;
    mf:action <s_bad_add_empty_graph.ldpatch> ;
    mf:name "add_empty_graph" .

<#add_no_period> a :NegativeSyntaxTest ;
    rdfs:comment "add no period" ;
    mf:action <s_bad_add_no_period.ldpatch> ;
    mf:name "add_no_period" .

<#add_var_as_object> a :PositiveSyntaxTest ;
    rdfs:comment "add var as object" ;
    mf:action <s_add_var_as_object.ldpatch> ;
    mf:name "add_var_as_object" .

<#add_var_as_predicate> a :NegativeSyntaxTest ;
    rdfs:comment "add var as predicate" ;
    mf:action <s_bad_add_var_as_predicate.ldpatch> ;
    mf:name "add_var_as_predicate" .

<#add_var_as_subject> a :PositiveSyntaxTest ;
    rdfs:comment "add var as subject" ;
    mf:action <s_add_var_as_subject.ldpatch> ;
    mf:name "add_var_as_subject" .

<#addnew_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "addnew empty graph.v" ;
    mf:action <s_bad_addnew_empty_graph.v.ldpatch> ;
    mf:name "addnew_empty_graph.v" .

<#addnew_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "addnew no period.v" ;
    mf:action <s_bad_addnew_no_period.v.ldpatch> ;
    mf:name "addnew_no_period.v" .

<#addnew_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "addnew var as object.v" ;
    mf:action <s_addnew_var_as_object.v.ldpatch> ;
    mf:name "addnew_var_as_object.v" .

<#addnew_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "addnew var as predicate.v" ;
    mf:action <s_bad_addnew_var_as_predicate.v.ldpatch> ;
    mf:name "addnew_var_as_predicate.v" .

<#addnew_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "addnew var as subject.v" ;
    mf:action <s_addnew_var_as_subject.v.ldpatch> ;
    mf:name "addnew_var_as_subject.v" .

<#an_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "an empty graph.v" ;
    mf:action <s_bad_an_empty_graph.v.ldpatch> ;
    mf:name "an_empty_graph.v" .

<#an_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "an no period.v" ;
    mf:action <s_bad_an_no_period.v.ldpatch> ;
    mf:name "an_no_period.v" .

<#an_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "an var as object.v" ;
    mf:action <s_an_var_as_object.v.ldpatch> ;
    mf:name "an_var_as_object.v" .

<#an_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "an var as predicate.v" ;
    mf:action <s_bad_an_var_as_predicate.v.ldpatch> ;
    mf:name "an_var_as_predicate.v" .

<#an_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "an var as subject.v" ;
    mf:action <s_an_var_as_subject.v.ldpatch> ;
    mf:name "an_var_as_subject.v" .

<#bind_no_path> a :NegativeSyntaxTest ;
    rdfs:comment "bind no path" ;
    mf:action <s_bad_bind_no_path.ldpatch> ;
    mf:name "bind_no_path" .

<#bind_no_period> a :NegativeSyntaxTest ;
    rdfs:comment "bind no period" ;
    mf:action <s_bad_bind_no_period.ldpatch> ;
    mf:name "bind_no_period" .

<#bind_no_var> a :NegativeSyntaxTest ;
    rdfs:comment "bind no var" ;
    mf:action <s_bad_bind_no_var.ldpatch> ;
    mf:name "bind_no_var" .

<#bind_var_unicode> a :PositiveSyntaxTest ;
    rdfs:comment "bind var unicode" ;
    mf:action <s_bind_var_unicode.ldpatch> ;
    mf:name "bind_var_unicode" .

<#c_bnode.v> a :NegativeSyntaxTest ;
    rdfs:comment "c bnode.v" ;
    mf:action <s_bad_c_bnode.v.ldpatch> ;
    mf:name "c_bnode.v" .

<#c_iri.v> a :NegativeSyntaxTest ;
    rdfs:comment "c iri.v" ;
    mf:action <s_bad_c_iri.v.ldpatch> ;
    mf:name "c_iri.v" .

<#c_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "c no period.v" ;
    mf:action <s_bad_c_no_period.v.ldpatch> ;
    mf:name "c_no_period.v" .

<#c_simple.v> a :PositiveSyntaxTest ;
    rdfs:comment "c simple.v" ;
    mf:action <s_c_simple.v.ldpatch> ;
    mf:name "c_simple.v" .

<#cut_bnode> a :NegativeSyntaxTest ;
    rdfs:comment "cut bnode" ;
    mf:action <s_bad_cut_bnode.ldpatch> ;
    mf:name "cut_bnode" .

<#cut_iri> a :NegativeSyntaxTest ;
    rdfs:comment "cut iri" ;
    mf:action <s_bad_cut_iri.ldpatch> ;
    mf:name "cut_iri" .

<#cut_no_period> a :NegativeSyntaxTest ;
    rdfs:comment "cut no period" ;
    mf:action <s_bad_cut_no_period.ldpatch> ;
    mf:name "cut_no_period" .

<#cut_simple> a :PositiveSyntaxTest ;
    rdfs:comment "cut simple" ;
    mf:action <s_cut_simple.ldpatch> ;
    mf:name "cut_simple" .

<#d_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "d empty graph.v" ;
    mf:action <s_bad_d_empty_graph.v.ldpatch> ;
    mf:name "d_empty_graph.v" .

<#d_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "d no period.v" ;
    mf:action <s_bad_d_no_period.v.ldpatch> ;
    mf:name "d_no_period.v" .

<#d_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "d var as object.v" ;
    mf:action <s_d_var_as_object.v.ldpatch> ;
    mf:name "d_var_as_object.v" .

<#d_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "d var as predicate.v" ;
    mf:action <s_bad_d_var_as_predicate.v.ldpatch> ;
    mf:name "d_var_as_predicate.v" .

<#d_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "d var as subject.v" ;
    mf:action <s_d_var_as_subject.v.ldpatch> ;
    mf:name "d_var_as_subject.v" .

<#de_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "de empty graph.v" ;
    mf:action <s_bad_de_empty_graph.v.ldpatch> ;
    mf:name "de_empty_graph.v" .

<#de_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "de no period.v" ;
    mf:action <s_bad_de_no_period.v.ldpatch> ;
    mf:name "de_no_period.v" .

<#de_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "de var as object.v" ;
    mf:action <s_de_var_as_object.v.ldpatch> ;
    mf:name "de_var_as_object.v" .

<#de_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "de var as predicate.v" ;
    mf:action <s_bad_de_var_as_predicate.v.ldpatch> ;
    mf:name "de_var_as_predicate.v" .

<#de_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "de var as subject.v" ;
    mf:action <s_de_var_as_subject.v.ldpatch> ;
    mf:name "de_var_as_subject.v" .

<#delete_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "delete empty graph.v" ;
    mf:action <s_bad_delete_empty_graph.v.ldpatch> ;
    mf:name "delete_empty_graph.v" .

<#delete_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "delete no period.v" ;
    mf:action <s_bad_delete_no_period.v.ldpatch> ;
    mf:name "delete_no_period.v" .

<#delete_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "delete var as object.v" ;
    mf:action <s_delete_var_as_object.v.ldpatch> ;
    mf:name "delete_var_as_object.v" .

<#delete_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "delete var as predicate.v" ;
    mf:action <s_bad_delete_var_as_predicate.v.ldpatch> ;
    mf:name "delete_var_as_predicate.v" .

<#delete_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "delete var as subject.v" ;
    mf:action <s_delete_var_as_subject.v.ldpatch> ;
    mf:name "delete_var_as_subject.v" .

<#deleteexisting_empty_graph.v> a :NegativeSyntaxTest ;
    rdfs:comment "deleteexisting empty graph.v" ;
    mf:action <s_bad_deleteexisting_empty_graph.v.ldpatch> ;
    mf:name "deleteexisting_empty_graph.v" .

<#deleteexisting_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "deleteexisting no period.v" ;
    mf:action <s_bad_deleteexisting_no_period.v.ldpatch> ;
    mf:name "deleteexisting_no_period.v" .

<#deleteexisting_var_as_object.v> a :PositiveSyntaxTest ;
    rdfs:comment "deleteexisting var as object.v" ;
    mf:action <s_deleteexisting_var_as_object.v.ldpatch> ;
    mf:name "deleteexisting_var_as_object.v" .

<#deleteexisting_var_as_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "deleteexisting var as predicate.v" ;
    mf:action <s_bad_deleteexisting_var_as_predicate.v.ldpatch> ;
    mf:name "deleteexisting_var_as_predicate.v" .

<#deleteexisting_var_as_subject.v> a :PositiveSyntaxTest ;
    rdfs:comment "deleteexisting var as subject.v" ;
    mf:action <s_deleteexisting_var_as_subject.v.ldpatch> ;
    mf:name "deleteexisting_var_as_subject.v" .

<#empty_patch> a :PositiveSyntaxTest ;
    rdfs:comment "empty patch" ;
    mf:action <s_empty_patch.ldpatch> ;
    mf:name "empty_patch" .

<#empty_patch_whitespace> a :PositiveSyntaxTest ;
    rdfs:comment "empty patch whitespace" ;
    mf:action <s_empty_patch_whitespace.ldpatch> ;
    mf:name "empty_patch_whitespace" .

<#path_mixed> a :PositiveSyntaxTest ;
    rdfs:comment "path mixed" ;
    mf:action <s_path_mixed.ldpatch> ;
    mf:name "path_mixed" .

<#ul_bnode.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul bnode.v" ;
    mf:action <s_bad_ul_bnode.v.ldpatch> ;
    mf:name "ul_bnode.v" .

<#ul_iri.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul iri.v" ;
    mf:action <s_bad_ul_iri.v.ldpatch> ;
    mf:name "ul_iri.v" .

<#ul_literal.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul literal.v" ;
    mf:action <s_bad_ul_literal.v.ldpatch> ;
    mf:name "ul_literal.v" .

<#ul_no_period.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul no period.v" ;
    mf:action <s_bad_ul_no_period.v.ldpatch> ;
    mf:name "ul_no_period.v" .

<#ul_no_predicate.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul no predicate.v" ;
    mf:action <s_bad_ul_no_predicate.v.ldpatch> ;
    mf:name "ul_no_predicate.v" .

<#ul_no_slice.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul no slice.v" ;
    mf:action <s_bad_ul_no_slice.v.ldpatch> ;
    mf:name "ul_no_slice.v" .

<#ul_no_value.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul no value.v" ;
    mf:action <s_bad_ul_no_value.v.ldpatch> ;
    mf:name "ul_no_value.v" .

<#ul_single_index.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul single index.v" ;
    mf:action <s_bad_ul_single_index.v.ldpatch> ;
    mf:name "ul_single_index.v" .

<#ul_slice_wrong_order.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul slice wrong order.v" ;
    mf:action <s_bad_ul_slice_wrong_order.v.ldpatch> ;
    mf:name "ul_slice_wrong_order.v" .

<#ul_var.v> a :NegativeSyntaxTest ;
    rdfs:comment "ul var.v" ;
    mf:action <s_bad_ul_var.v.ldpatch> ;
    mf:name "ul_var.v" .

<#unbound_variable> a :NegativeSyntaxTest ;
    rdfs:comment "unbound variable" ;
    mf:action <s_bad_unbound_variable.ldpatch> ;
    mf:name "unbound_variable" .

<#undeclared_prefix> a :NegativeSyntaxTest ;
    rdfs:comment "undeclared prefix" ;
    mf:action <s_bad_undeclared_prefix.ldpatch> ;
    mf:name "undeclared_prefix" .

<#updatelist_bnode> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist bnode" ;
    mf:action <s_bad_updatelist_bnode.ldpatch> ;
    mf:name "updatelist_bnode" .

<#updatelist_iri> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist iri" ;
    mf:action <s_bad_updatelist_iri.ldpatch> ;
    mf:name "updatelist_iri" .

<#updatelist_literal> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist literal" ;
    mf:action <s_bad_updatelist_literal.ldpatch> ;
    mf:name "updatelist_literal" .

<#updatelist_no_period> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist no period" ;
    mf:action <s_bad_updatelist_no_period.ldpatch> ;
    mf:name "updatelist_no_period" .

<#updatelist_no_predicate> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist no predicate" ;
    mf:action <s_bad_updatelist_no_predicate.ldpatch> ;
    mf:name "updatelist_no_predicate" .

<#updatelist_no_slice> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist no slice" ;
    mf:action <s_bad_updatelist_no_slice.ldpatch> ;
    mf:name "updatelist_no_slice" .

<#updatelist_no_value> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist no value" ;
    mf:action <s_bad_updatelist_no_value.ldpatch> ;
    mf:name "updatelist_no_value" .

<#updatelist_single_index> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist single index" ;
    mf:action <s_bad_updatelist_single_index.ldpatch> ;
    mf:name "updatelist_single_index" .

<#updatelist_slice_wrong_order> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist slice wrong order" ;
    mf:action <s_bad_updatelist_slice_wrong_order.ldpatch> ;
    mf:name "updatelist_slice_wrong_order" .

<#updatelist_var> a :NegativeSyntaxTest ;
    rdfs:comment "updatelist var" ;
    mf:action <s_bad_updatelist_var.ldpatch> ;
    mf:name "updatelist_var" .

